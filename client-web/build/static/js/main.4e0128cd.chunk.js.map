{"version":3,"sources":["components/hooks/auth-hook.js","components/functions/auth-context.js","components/shared/Button.js","components/shared/Card.js","components/layout/Backdrop.js","components/layout/Modal.js","components/layout/ErrorModal.js","components/layout/LoadingSpinner.js","components/shared/TransactionList.js","components/hooks/axios-hook.js","components/pages/AccountDetailScreen.js","components/shared/AccountsList.js","components/pages/AccountScreen.js","components/layout/Header.js","components/pages/HomeScreen.js","components/functions/transactions.js","components/pages/IncomeScreen.js","components/hooks/form-hook.js","components/layout/ImageUpload.js","components/functions/validators.js","components/shared/Input.js","components/pages/LoginScreen.js","components/pages/UserScreen.js","App.js","index.js"],"names":["logoutTimer","AuthContext","createContext","isLoggedIn","token","login","logout","userId","name","Button","props","href","className","size","inverse","dark","danger","children","to","exact","type","onClick","disabled","Card","style","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","error","color","LoadingSpinner","asOverlay","TransactionList","transactions","length","map","transaction","amount","transaction_id","useAxiosClient","useState","isLoading","setIsLoading","setError","sendRequest","useCallback","a","method","url","data","headers","console","log","axios","then","res","responseData","catch","err","response","message","clearError","AccountDetailScreen","auth","useContext","accountDetail","setAccountDetail","useParams","accountId","subAccount","useEffect","fetchAccountDetail","balanceResponse","accounts","transactionResponse","BalanceDisplay","balances","current","available","AccountsList","account","account_id","id","institutionName","subtype","AccountIcon","icon","AccountScreen","setAccounts","setHeader","setTransactions","institutionResponse","institution","fetchAccount","Header","replace","c","toUpperCase","src","image","alt","HomeScreen","linkToken","setLinkToken","createLinkToken","getAccounts","onSuccess","publicToken","metadata","moment","require","getTransactionsByType","filter","getTotalAmount","filteredTransactions","reduce","sortTransactions","today","sortedTransactions","index","date","diff","push","IncomeScreen","getTransactions","IncomeCards","toFixed","RiskAssessment","annualIncome","annualSpend","positiveMonths","getPositiveMonths","riskCategory","annualTotal","Math","abs","getRiskCategory","riskScore","getRiskTotal","formReducer","state","action","formIsValid","inputId","inputs","isValid","value","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","onChange","pickedFile","fileIsValid","target","files","onInput","center","click","errorText","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","validate","validators","validator","trim","val","test","Input","useReducer","inputReducer","initialValue","isTouched","initialValid","inputState","dispatch","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","LoginScreen","isLoginMode","setIsLoginMode","initialInputs","initialFormValidity","formState","inputData","formValidity","useForm","email","password","inputHandler","setFormData","authSubmitHandler","formData","FormData","append","undefined","prevMode","UserScreen","library","add","fas","App","tokenExpiry","userData","setUserData","encryptedToken","expirationDate","decryptedToken","jwt","tokenExpirationDate","Date","getTime","prevState","user","localStorage","setItem","JSON","stringify","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","routes","getRoutes","Provider","path","render"],"mappings":"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","file":"static/js/main.4e0128cd.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\nimport jwt from \"jwt-decode\";\r\n\r\nlet logoutTimer;\r\n\r\n/**\r\n * A self contained hook to handle user variables, login and logout functionality.\r\n * @returns User states, login and logout functionality\r\n */\r\nexport const useAuth = () => {\r\n  const [userData, setUserData] = useState({\r\n    email: null,\r\n    name: null,\r\n    userId: null,\r\n    token: null,\r\n    tokenExpiry: null,\r\n  });\r\n\r\n  /**\r\n   * Logs in using an encrypted JWT token.\r\n   *\r\n   * Will look for a locally stored expiration or create one itself\r\n   * @param encryptedToken - Received from the server. Encrypted user object.\r\n   * @param expirationDate - If this was locally stored (ie: close the browser, reopen) it will use this to stay logged in.\r\n   */\r\n  const login = useCallback((encryptedToken, expirationDate) => {\r\n    let decryptedToken = jwt(encryptedToken);\r\n\r\n    /**\r\n     * Gives assigns the user a new expiration date (unless they have one)\r\n     */\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n\r\n    /**\r\n     * Updates user states. First is all values found in user object.\r\n     */\r\n    setUserData((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        ...decryptedToken.user,\r\n        token: encryptedToken,\r\n        tokenExpiry: tokenExpirationDate,\r\n      };\r\n    });\r\n\r\n    /**\r\n     * Stores the user data locally so they can relogin.\r\n     */\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        token: encryptedToken,\r\n        tokenExpiry: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  /**\r\n   * Nulls out all of the user values and deletes their local storage.\r\n   */\r\n  const logout = useCallback(() => {\r\n    setUserData({\r\n      email: null,\r\n      name: null,\r\n      userId: null,\r\n      token: null,\r\n      tokenExpiry: null,\r\n    });\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  /**\r\n   * Checks remaining time on the user's token.\r\n   */\r\n  useEffect(() => {\r\n    if (userData.token && userData.tokenExpiry) {\r\n      const remainingTime =\r\n        userData.tokenExpiry.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [userData, logout]);\r\n\r\n  /**\r\n   * Checks if the user has previously logged in and their token is still valid in local storage.\r\n   * Logs the user in if true, using the previous time.\r\n   */\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.tokenExpiry) > new Date()\r\n    ) {\r\n      login(storedData.token, new Date(storedData.tokenExpiry));\r\n    }\r\n  }, [login]);\r\n\r\n  return { token: userData, login, logout };\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n  userId: null,\r\n  name: null,\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../css/button.css\";\r\n\r\nconst Button = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.dark && \"button--dark\"} ${props.danger && \"button--danger\"}`}\r\n        href={props.href}>\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.dark && \"button--dark\"} ${props.danger && \"button--danger\"}`}>\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || \"default\"} ${\r\n        props.inverse && \"button--inverse\"\r\n      } ${props.dark && \"button--dark\"} ${props.danger && \"button--danger\"}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport \"../css/card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"../css/backdrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById(\"backdrop-hook\")\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"../css/modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }>\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\">\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nimport Button from \"../shared/Button\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}>\r\n      <h4 style={{ color: \"black\" }}>{props.error}</h4>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\n\r\nimport \"../css/loadingspinner.css\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n  return (\r\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\n\r\nimport Card from \"./Card\";\r\nimport \"../css/transaction.css\";\r\n\r\nconst TransactionList = (props) => {\r\n  if (!props.transactions.length) {\r\n    return (\r\n      <div className=\"transaction-list center\">\r\n        <Card className=\"transaction-item\">\r\n          <h2>No transactions found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"transaction-list\">\r\n      {props.transactions.map((transaction) => (\r\n        <li key={transaction.transaction_id}>\r\n          <Card className=\"transaction-item\">\r\n            <h2>{transaction.name}</h2>\r\n            <h3>${transaction.amount}</h3>\r\n          </Card>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import { useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useAxiosClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const sendRequest = useCallback(\r\n    async (method = \"GET\", url, data = null, headers = {}) => {\r\n      let responseData;\r\n      setIsLoading(true);\r\n      console.log(method, url, data, headers);\r\n      await axios({\r\n        method,\r\n        url,\r\n        data,\r\n        headers,\r\n      })\r\n        .then((res) => {\r\n          setIsLoading(false);\r\n          responseData = res.data;\r\n        })\r\n        .catch((err) => {\r\n          setError(err.response.data.message);\r\n          setIsLoading(false);\r\n          throw err;\r\n        });\r\n      return responseData;\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../functions/auth-context\";\r\nimport Button from \"../shared/Button\";\r\nimport Card from \"../shared/Card\";\r\nimport ErrorModal from \"../layout/ErrorModal\";\r\nimport LoadingSpinner from \"../layout/LoadingSpinner\";\r\nimport TransactionList from \"../shared/TransactionList\";\r\nimport { useAxiosClient } from \"../hooks/axios-hook\";\r\n\r\nconst AccountDetailScreen = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const [accountDetail, setAccountDetail] = useState(\"LOADING\");\r\n  const { accountId, subAccount } = useParams();\r\n  const { isLoading, error, sendRequest, clearError } = useAxiosClient();\r\n\r\n  useEffect(() => {\r\n    const fetchAccountDetail = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"GET\",\r\n          `http://localhost:5000/api/accounts/${accountId}/${subAccount}`,\r\n          {\r\n            userId: auth.userId,\r\n          },\r\n          {\r\n            \"x-auth-token\": auth.token,\r\n          }\r\n        );\r\n        setAccountDetail(responseData);\r\n      } catch (err) {}\r\n    };\r\n    fetchAccountDetail();\r\n  }, [accountId, auth.token, auth.userId, sendRequest, subAccount]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <div className=\"account-nav\">\r\n        <Button\r\n          inverse\r\n          className=\"account-nav__button\"\r\n          to={`/acc=${accountId}`}>\r\n          RETURN\r\n        </Button>\r\n      </div>\r\n      <Card className=\"account-card\">\r\n        <div className=\"account-card__header\">\r\n          {accountDetail.balanceResponse?.accounts[0].name || \"LOADING\"}\r\n          <BalanceDisplay balanceResponse={accountDetail.balanceResponse} />\r\n        </div>\r\n        {accountDetail.transactionResponse && (\r\n          <TransactionList\r\n            transactions={accountDetail.transactionResponse.transactions}\r\n          />\r\n        )}\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AccountDetailScreen;\r\n\r\nconst BalanceDisplay = (props) => {\r\n  return (\r\n    <div className=\"account-details__balance\">\r\n      <div className=\"account-details__balance-large\">\r\n        ${props.balanceResponse?.accounts[0].balances.current || 0}\r\n      </div>\r\n      (of{\"  \"}\r\n      {props.balanceResponse?.accounts[0].balances.available +\r\n        props.balanceResponse?.accounts[0].balances.current || 0}\r\n      )\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport \"../css/accountslist.css\";\r\n\r\nconst AccountsList = (props) => {\r\n  const { accountId } = useParams();\r\n  if (!props.accounts.length) {\r\n    return <div>Error</div>;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.accounts.map((account) => {\r\n        return (\r\n          <Link\r\n            className={`accountslist-card accountslist-card__${\r\n              props.size || \"default\"\r\n            } ${props.dark && \"accountslist-card__dark\"}`}\r\n            key={account.id || account.account_id}\r\n            to={\r\n              account.name\r\n                ? `/acc=${accountId}/sub=${account.account_id}`\r\n                : `/acc=${account.id}`\r\n            }>\r\n            <div className=\"accountslist-card__header\" />\r\n            <div className=\"accountslist-card__info\">\r\n              {account.institutionName || account.name}\r\n              {account.name && (\r\n                <div className=\"accountslist-card__icon\">\r\n                  <AccountIcon subtype={account.subtype} />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </Link>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AccountsList;\r\n\r\nconst AccountIcon = (props) => {\r\n  let icon;\r\n  switch (props.subtype) {\r\n    case \"checking\":\r\n      icon = \"money-check-alt\";\r\n      break;\r\n    case \"credit card\":\r\n      icon = \"credit-card\";\r\n      break;\r\n    case \"mortgage\":\r\n      icon = \"home\";\r\n      break;\r\n    case \"savings\":\r\n      icon = \"piggy-bank\";\r\n      break;\r\n    case \"student\":\r\n      icon = \"user-graduate\";\r\n      break;\r\n    default:\r\n      icon = \"file-invoice-dollar\";\r\n      break;\r\n  }\r\n\r\n  return <FontAwesomeIcon size=\"2x\" icon={icon} />;\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport AccountsList from \"../shared/AccountsList\";\r\nimport { AuthContext } from \"../functions/auth-context\";\r\nimport Button from \"../shared/Button\";\r\nimport Card from \"../shared/Card\";\r\nimport ErrorModal from \"../layout/ErrorModal\";\r\nimport LoadingSpinner from \"../layout/LoadingSpinner\";\r\nimport TransactionList from \"../shared/TransactionList\";\r\nimport { useAxiosClient } from \"../hooks/axios-hook\";\r\n\r\nimport \"../css/account.css\";\r\n\r\nconst AccountScreen = (props) => {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const { accountId } = useParams();\r\n  const auth = useContext(AuthContext);\r\n  const [header, setHeader] = useState(\"LOADING\");\r\n  const [transactions, setTransactions] = useState([]);\r\n  const { isLoading, error, sendRequest, clearError } = useAxiosClient();\r\n\r\n  useEffect(() => {\r\n    if (!accountId) return;\r\n    const fetchAccount = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"GET\",\r\n          `http://localhost:5000/api/accounts/${accountId}`,\r\n          {\r\n            userId: auth.userId,\r\n          },\r\n          {\r\n            \"x-auth-token\": auth.token,\r\n          }\r\n        );\r\n        setHeader(responseData.institutionResponse.institution.name);\r\n        setAccounts(responseData.balanceResponse.accounts);\r\n        setTransactions(responseData.transactionResponse.transactions);\r\n      } catch (err) {}\r\n    };\r\n    fetchAccount();\r\n  }, [accountId, auth.token, auth.userId, sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <div className=\"account-nav\">\r\n        <Button inverse className=\"account-nav__button\" to=\"/\">\r\n          RETURN\r\n        </Button>\r\n      </div>\r\n      <Card className=\"account-card\">\r\n        <div className=\"account-card__header\">{header}</div>\r\n        {accounts.length && (\r\n          <div className=\"account-card__list\">\r\n            <AccountsList dark accounts={accounts} />\r\n          </div>\r\n        )}\r\n        {transactions.length && (\r\n          <React.Fragment>\r\n            <div className=\"account-card__text\">Transaction Overview</div>\r\n            <TransactionList transactions={transactions} />\r\n          </React.Fragment>\r\n        )}\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AccountScreen;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../functions/auth-context\";\r\nimport Button from \"../shared/Button\";\r\n\r\nimport \"../css/header.css\";\r\n\r\nconst Header = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const logoutHandler = () => {\r\n    auth.logout();\r\n  };\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"header-info\">\r\n        Welcome\r\n        {auth.isLoggedIn &&\r\n          ` ${auth.name.replace(/^\\w/, (c) => c.toUpperCase())}`}\r\n      </div>\r\n      <div className=\"header-buttons\">\r\n        <Button to=\"/\">ACCOUNTS</Button>\r\n        <Button to=\"/income\">INCOME</Button>\r\n        <Button onClick={logoutHandler}>LOGOUT</Button>\r\n        <Link to=\"/user\">\r\n          <img className=\"header-avatar\" src={`${auth.image}`} alt=\"Profile\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useCallback, useEffect, useContext } from \"react\";\r\nimport { PlaidLink } from \"react-plaid-link\";\r\n\r\nimport AccountsList from \"../shared/AccountsList\";\r\nimport { AuthContext } from \"../functions/auth-context\";\r\nimport Card from \"../shared/Card\";\r\nimport ErrorModal from \"../layout/ErrorModal\";\r\nimport LoadingSpinner from \"../layout/LoadingSpinner\";\r\nimport { useAxiosClient } from \"../hooks/axios-hook\";\r\nimport \"../css/home.css\";\r\n\r\nconst HomeScreen = (props) => {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useAxiosClient();\r\n  const [linkToken, setLinkToken] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!auth.token) return;\r\n    const createLinkToken = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"GET\",\r\n          \"http://localhost:5000/api/token/create-link-token\",\r\n          {\r\n            userId: auth.userId,\r\n          },\r\n          {\r\n            \"x-auth-token\": auth.token,\r\n          }\r\n        );\r\n        setLinkToken(responseData);\r\n      } catch (err) {}\r\n    };\r\n\r\n    createLinkToken();\r\n  }, [auth.userId, auth.token, sendRequest]);\r\n\r\n  /**  on component load check for accounts associated with logged in user   */\r\n  useEffect(() => {\r\n    if (!linkToken) return;\r\n    const getAccounts = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"GET\",\r\n          \"http://localhost:5000/api/accounts\",\r\n          {\r\n            userId: auth.userId,\r\n          },\r\n          {\r\n            \"x-auth-token\": auth.token,\r\n          }\r\n        );\r\n        setAccounts(responseData.accounts);\r\n      } catch (err) {}\r\n    };\r\n\r\n    getAccounts();\r\n  }, [auth.userId, auth.token, sendRequest, linkToken]);\r\n\r\n  const onSuccess = useCallback(\r\n    async (publicToken, metadata) => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"POST\",\r\n          \"http://localhost:5000/api/token/token-exchange\",\r\n          {\r\n            publicToken: publicToken,\r\n            metadata,\r\n            token: auth.token,\r\n          },\r\n          {\r\n            \"x-auth-token\": auth.token,\r\n          }\r\n        );\r\n        console.log(responseData);\r\n      } catch (err) {}\r\n    },\r\n    [auth.token, sendRequest]\r\n  );\r\n\r\n  /** Dynamically displays accounts based on fetched account data */\r\n  let content;\r\n  if (!accounts.length) {\r\n    content = (\r\n      <div className=\"home-empty\">\r\n        <div>\r\n          <h3>No Accounts found!</h3>\r\n          <h4>\r\n            Link your account now with plaid, Click the 'Link via Plaid' button\r\n            to get started.\r\n          </h4>\r\n        </div>\r\n        {linkToken && (\r\n          <Card className=\"plaid-card\">\r\n            <PlaidLink\r\n              className=\"plaid-card__content\"\r\n              token={linkToken}\r\n              onSuccess={onSuccess}>\r\n              Link via Plaid\r\n            </PlaidLink>\r\n          </Card>\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    content = (\r\n      <div className=\"home-accounts\">\r\n        <AccountsList accounts={accounts} userId={auth.userId} />\r\n        <Card className=\"plaid-card\">\r\n          <PlaidLink\r\n            className=\"plaid-card__content\"\r\n            token={linkToken}\r\n            onSuccess={onSuccess}>\r\n            Link via Plaid\r\n          </PlaidLink>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {content}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","const moment = require(\"moment\");\r\n\r\n/** Filter based on type */\r\nexport const getTransactionsByType = (transactions, type) => {\r\n  if (!transactions.length) {\r\n    return 0;\r\n  }\r\n\r\n  switch (type) {\r\n    case \"income\":\r\n      return transactions.filter(({ amount }) => {\r\n        return amount < 0;\r\n      });\r\n    case \"expenditure\":\r\n      return transactions.filter(({ amount }) => {\r\n        return amount > 0;\r\n      });\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n\r\n/** Get totals */\r\nexport const getTotalAmount = (filteredTransactions) => {\r\n  if (!filteredTransactions.length) {\r\n    return 0;\r\n  }\r\n\r\n  return filteredTransactions.reduce(\r\n    (current, { amount }) => current + amount,\r\n    0\r\n  );\r\n};\r\n\r\n/** Categorize transactions by month */\r\nexport const sortTransactions = (transactions) => {\r\n  if (!transactions.length) {\r\n    return 0;\r\n  }\r\n\r\n  let today = moment();\r\n\r\n  /** Final array of object containing monthly transactions */\r\n  let sortedTransactions = [[], [], [], [], [], [], [], [], [], [], [], []];\r\n\r\n  /** This is pretty obtuse but it's as concise as I can get it\r\n   * We're iterating over the transactions, finding the month, comparing it,\r\n   * then adding it to its respective month in the array. The difference comes in negatives\r\n   * so we need to invert the result\r\n   */\r\n  for (let index = 0; index < transactions.length; index++) {\r\n    sortedTransactions[\r\n      -moment(transactions[index].date).diff(today, \"months\")\r\n    ].push(transactions[index]);\r\n  }\r\n\r\n  return sortedTransactions;\r\n};\r\n\r\n/** Gets the total number of positive months from an array\r\n * Requirements: Sorted first\r\n */\r\nexport const getPositiveMonths = (sortedTransactions) => {\r\n  if (!sortTransactions.length) {\r\n    return 0;\r\n  }\r\n\r\n  /** Number of months in the positive. */\r\n  let positiveMonths = 0;\r\n\r\n  for (let index = 0; index < sortedTransactions.length; index++) {\r\n    if (getTotalAmount(sortedTransactions[0]) > 0) {\r\n      positiveMonths++;\r\n    }\r\n  }\r\n\r\n  return positiveMonths;\r\n};\r\n\r\n/** Returns the risk category based on flow chart */\r\nexport const getRiskCategory = (annualIncome, annualSpend) => {\r\n  /** annualIncome - annualSpend */\r\n  let annualTotal = annualIncome - annualSpend;\r\n\r\n  switch (true) {\r\n    /** 2. X >= 50% of annual income */\r\n    case annualTotal >= annualIncome / 2:\r\n      return 2;\r\n    /** 3. 10% <= X <= 49% of annual income */\r\n    case annualIncome * 0.1 <= annualTotal &&\r\n      annualTotal <= annualIncome * 0.49:\r\n      return 3;\r\n    /** 4. 2% <= X <= 9% of annual income */\r\n    case annualIncome * 0.02 <= annualTotal &&\r\n      annualTotal <= annualIncome * 0.09:\r\n      return 4;\r\n    /** 5. 0 <= X <= 1% of annual income */\r\n    case 0 <= annualTotal && annualTotal <= annualIncome * 0.01:\r\n      return 5;\r\n    /** 6. 1% <= |-X| <= 9% more than annual income */\r\n    case annualIncome * 0.01 <= Math.abs(-annualTotal) &&\r\n      Math.abs(-annualTotal) <= annualIncome * 1.9:\r\n      return 6;\r\n    /** 7. |-x| >= 10% more than annual income */\r\n    case Math.abs(-annualTotal) >= annualIncome * 1.1:\r\n      return 7;\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n\r\n/** Calculates the risk within the category using monthly.\r\n *\r\n * Prerequisite: A risk category\r\n */\r\nexport const getRiskTotal = (riskCategory, positiveMonths) => {\r\n  if (!riskCategory) {\r\n    return -1;\r\n  }\r\n  switch (riskCategory) {\r\n    case 2:\r\n      return positiveMonths >= 6 ? 100 : 95;\r\n    case 3:\r\n      return positiveMonths >= 6 ? 85 : 80;\r\n    case 4:\r\n      return positiveMonths >= 6 ? 75 : 70;\r\n    case 5:\r\n      return positiveMonths >= 6 ? 50 : 45;\r\n    case 6:\r\n      return positiveMonths >= 6 ? 25 : 20;\r\n    case 7:\r\n      return 0;\r\n    default:\r\n      return -1;\r\n  }\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { AuthContext } from \"../functions/auth-context\";\r\nimport Card from \"../shared/Card\";\r\nimport ErrorModal from \"../layout/ErrorModal\";\r\nimport LoadingSpinner from \"../layout/LoadingSpinner\";\r\nimport { useAxiosClient } from \"../hooks/axios-hook\";\r\nimport {\r\n  getPositiveMonths,\r\n  getTransactionsByType,\r\n  getTotalAmount,\r\n  sortTransactions,\r\n  getRiskCategory,\r\n  getRiskTotal,\r\n} from \"../functions/transactions\";\r\n\r\nimport \"../css/income.css\";\r\n\r\nconst IncomeScreen = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const [transactions, setTransactions] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useAxiosClient();\r\n\r\n  useEffect(() => {\r\n    if (!auth.token) return;\r\n    const getTransactions = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"GET\",\r\n          \"http://localhost:5000/api/income/12\",\r\n          {\r\n            userId: auth.userId,\r\n          },\r\n          {\r\n            \"x-auth-token\": auth.token,\r\n          }\r\n        );\r\n        setTransactions(responseData.transactionResponse.transactions);\r\n      } catch (err) {}\r\n    };\r\n    getTransactions();\r\n  }, [auth.token, auth.userId, sendRequest]);\r\n\r\n  let content;\r\n  if (!transactions) {\r\n    content = <h2>LOADING</h2>;\r\n  } else {\r\n    content = (\r\n      <Card className=\"account-card\">\r\n        <div className=\"account-card__header\">INCOME</div>\r\n        <div className=\"income-details\">\r\n          <IncomeCards transactions={transactions} />\r\n          <RiskAssessment transactions={transactions} />\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {content}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default IncomeScreen;\r\n\r\n/** A container that holds various stats about transactions */\r\nconst IncomeCards = (props) => {\r\n  return (\r\n    <div className=\"income-cards__container\">\r\n      <div className=\"income-card\">\r\n        <div className=\"income-card__header\">Transactions</div>\r\n        {props.transactions?.length || 0}\r\n      </div>\r\n      <div className=\"income-card\">\r\n        <div className=\"income-card__header\">Income</div>\r\n        {getTotalAmount(\r\n          getTransactionsByType(props.transactions, \"income\")\r\n        ).toFixed(2)}\r\n      </div>\r\n      <div className=\"income-card\">\r\n        <div className=\"income-card__header\">Spending</div>\r\n        {getTotalAmount(\r\n          getTransactionsByType(props.transactions, \"expenditure\")\r\n        ).toFixed(2)}\r\n      </div>\r\n      <div className=\"income-card\">\r\n        <div className=\"income-card__header\">Totals</div>\r\n        {getTotalAmount(props.transactions).toFixed(2)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/** Displays user risk assessment based on the algo */\r\nconst RiskAssessment = (props) => {\r\n  /** Total Inbound */\r\n  let annualIncome = getTotalAmount(\r\n    getTransactionsByType(props.transactions, \"income\")\r\n  ).toFixed(2);\r\n\r\n  /** Total Outbound */\r\n  let annualSpend = getTotalAmount(\r\n    getTransactionsByType(props.transactions, \"expenditure\")\r\n  ).toFixed(2);\r\n\r\n  /** Total positive months */\r\n  let positiveMonths = getPositiveMonths(sortTransactions(props.transactions));\r\n\r\n  /** Risk category based on annual info */\r\n  let riskCategory = getRiskCategory(annualIncome, annualSpend);\r\n\r\n  /** Risk score from category, monthly */\r\n  let riskScore = getRiskTotal(riskCategory, positiveMonths);\r\n\r\n  return (\r\n    <div className=\"income-risk\">\r\n      <div className=\"income-risk__header\">RISK ANALYSIS</div>\r\n      <div className=\"income-risk__details\">\r\n        ANNUAL NET: {annualIncome}\r\n        <br />\r\n        POSITIVES MONTHS: {positiveMonths}\r\n        <br />\r\n        RISK CATEGORY: {riskCategory}\r\n        <br />\r\n        CALCULATED SCORE: {riskScore}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"../shared/Button\";\r\nimport \"../css/imageupload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button dark type=\"button\" onClick={pickImageHandler}>\r\n          BROWSE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../functions/validators\";\r\nimport \"../css/input.css\";\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}>\r\n      <label style={{ color: \"black\" }} htmlFor={props.id}>\r\n        {props.label}\r\n      </label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport { AuthContext } from \"../functions/auth-context\";\r\nimport { useAxiosClient } from \"../hooks/axios-hook\";\r\nimport Button from \"../shared/Button\";\r\nimport Card from \"../shared/Card\";\r\nimport ErrorModal from \"../layout/ErrorModal\";\r\nimport { useForm } from \"../hooks/form-hook\";\r\nimport ImageUpload from \"../layout/ImageUpload\";\r\nimport Input from \"../shared/Input\";\r\nimport LoadingSpinner from \"../layout/LoadingSpinner\";\r\n\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../functions/validators\";\r\n\r\nimport \"../css/login.css\";\r\n\r\nconst LoginScreen = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useAxiosClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  /**\r\n   * User presses SWITCH TO LOGIN/SIGNUP: Changes form data\r\n   * @param {state} isLoginMode - Login default. Current mode\r\n   */\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          email: undefined,\r\n          image: undefined,\r\n          name: undefined,\r\n          password: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          email: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          password: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  /**\r\n   * User presses LOGIN or SIGN UP: Sends the respective request & data\r\n   * @param {*} event - Click\r\n   * @param {state} formState - What is currently typed in\r\n   */\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"POST\",\r\n          \"http://localhost:5000/api/users\",\r\n          {\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }\r\n        );\r\n        auth.login(responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        const responseData = await sendRequest(\r\n          \"POST\",\r\n          \"http://localhost:5000/api/users/create\",\r\n\r\n          formData\r\n        );\r\n        auth.login(responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Cuddly Octo Doodle</h1>\r\n          <ErrorModal error={error} onClear={clearError} />\r\n          <Card className=\"authentication\">\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <h2 style={{ color: \"black\" }}>Login Required</h2>\r\n            <hr />\r\n            <form onSubmit={authSubmitHandler}>\r\n              <Input\r\n                element=\"input\"\r\n                id=\"email\"\r\n                type=\"email\"\r\n                label=\"E-Mail\"\r\n                validators={[VALIDATOR_EMAIL()]}\r\n                errorText=\"Please enter a valid email address.\"\r\n                onInput={inputHandler}\r\n              />\r\n              {!isLoginMode && (\r\n                <>\r\n                  <ImageUpload\r\n                    center\r\n                    id=\"image\"\r\n                    onInput={inputHandler}\r\n                    errorText=\"Please provide an image.\"\r\n                  />\r\n\r\n                  <Input\r\n                    element=\"input\"\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    label=\"Your Name\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a name.\"\r\n                    onInput={inputHandler}\r\n                  />\r\n                </>\r\n              )}\r\n              <Input\r\n                element=\"input\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                validators={[VALIDATOR_MINLENGTH(5)]}\r\n                errorText=\"Please enter a valid password, at least 5 characters.\"\r\n                onInput={inputHandler}\r\n              />\r\n              <Button dark disabled={!formState.isValid} type=\"submit\">\r\n                {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n              </Button>\r\n            </form>\r\n            <Button dark onClick={switchModeHandler}>\r\n              SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n            </Button>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport { AuthContext } from \"../functions/auth-context\";\r\nimport Button from \"../shared/Button\";\r\nimport { useAxiosClient } from \"../hooks/axios-hook\";\r\n\r\nconst UserScreen = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <div>\r\n      Hello {auth.name}\r\n      <img src={auth.image} alt=\"Avatar\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserScreen;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport AccountDetailScreen from \"./components/pages/AccountDetailScreen\";\r\nimport AccountScreen from \"./components/pages/AccountScreen\";\r\nimport { AuthContext } from \"./components/functions/auth-context\";\r\nimport Header from \"./components/layout/Header\";\r\nimport HomeScreen from \"./components/pages/HomeScreen\";\r\nimport IncomeScreen from \"./components/pages/IncomeScreen\";\r\nimport LoginScreen from \"./components/pages/LoginScreen\";\r\nimport { useAuth } from \"./components/hooks/auth-hook\";\r\nimport UserScreen from \"./components/pages/UserScreen\";\r\nimport \"./components/css/app.css\";\r\n\r\n/** Icon Library */\r\nlibrary.add(fas);\r\n\r\nconst App = () => {\r\n  const { token, login, logout } = useAuth();\r\n  let routes = getRoutes(!!token.token);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token.token,\r\n        login: login,\r\n        logout: logout,\r\n        email: token.email,\r\n        image: token.image,\r\n        name: token.name,\r\n        userId: token.userId,\r\n        token: token.token,\r\n      }}>\r\n      <Router>{routes}</Router>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst getRoutes = (isLoggedIn) => {\r\n  if (isLoggedIn) {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <div className=\"viewport\">\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <HomeScreen />\r\n            </Route>\r\n            <Route path=\"/acc=:accountId\" exact>\r\n              <AccountScreen />\r\n            </Route>\r\n            <Route path=\"/acc=:accountId/sub=:subAccount\" exact>\r\n              <AccountDetailScreen />\r\n            </Route>\r\n            <Route path=\"/income\" exact>\r\n              <IncomeScreen />\r\n            </Route>\r\n            <Route path=\"/user\" exact>\r\n              <UserScreen />\r\n            </Route>\r\n            <Redirect to=\"/\" exact />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <LoginScreen />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}